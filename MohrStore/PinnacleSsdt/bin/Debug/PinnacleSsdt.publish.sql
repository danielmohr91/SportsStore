/*
Deployment script for Pinnacle

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Pinnacle"
:setvar DefaultFilePrefix "Pinnacle"
:setvar DefaultDataPath "C:\Users\dmohr\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"
:setvar DefaultLogPath "C:\Users\dmohr\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key 68af4a8f-a0b6-4b16-aef0-f779d85f1716 is skipped, element [dbo].[Nurse].[Street1] (SqlSimpleColumn) will not be renamed to State';


GO
PRINT N'Rename refactoring operation with key 1ed7dfda-fa57-4aa3-9f43-975a49973c46, 2eb96f90-f298-4f4d-aa71-fbe44e163a24 is skipped, element [dbo].[Nurse].[Id] (SqlSimpleColumn) will not be renamed to AddressId';


GO
PRINT N'Rename refactoring operation with key bc4833e6-507b-4315-8c3c-6fe0920d5b7f, ffe8c1b5-74e1-416f-884e-9bdb275eb33c is skipped, element [dbo].[Nurse].[Street1] (SqlSimpleColumn) will not be renamed to Zip';


GO
PRINT N'Creating [dbo].[Address]...';


GO
CREATE TABLE [dbo].[Address] (
    [AddressId] UNIQUEIDENTIFIER NOT NULL,
    [Street1]   NVARCHAR (250)   NULL,
    [Street2]   NVARCHAR (250)   NULL,
    [City]      NVARCHAR (250)   NULL,
    [State]     NVARCHAR (250)   NULL,
    [Zip]       INT              NULL,
    [Country]   NVARCHAR (250)   NULL,
    PRIMARY KEY CLUSTERED ([AddressId] ASC)
);


GO
PRINT N'Creating [dbo].[Company]...';


GO
CREATE TABLE [dbo].[Company] (
    [CompanyId] UNIQUEIDENTIFIER NOT NULL,
    [AddressId] UNIQUEIDENTIFIER NULL,
    [Name]      NVARCHAR (250)   NULL,
    PRIMARY KEY CLUSTERED ([CompanyId] ASC)
);


GO
PRINT N'Creating [dbo].[Nurse]...';


GO
CREATE TABLE [dbo].[Nurse] (
    [NurseId]   UNIQUEIDENTIFIER NOT NULL,
    [CompanyId] UNIQUEIDENTIFIER NULL,
    [AddressId] UNIQUEIDENTIFIER NULL,
    [Name]      NVARCHAR (250)   NULL,
    PRIMARY KEY CLUSTERED ([NurseId] ASC)
);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1ed7dfda-fa57-4aa3-9f43-975a49973c46')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1ed7dfda-fa57-4aa3-9f43-975a49973c46')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2eb96f90-f298-4f4d-aa71-fbe44e163a24')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2eb96f90-f298-4f4d-aa71-fbe44e163a24')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '68af4a8f-a0b6-4b16-aef0-f779d85f1716')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('68af4a8f-a0b6-4b16-aef0-f779d85f1716')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bc4833e6-507b-4315-8c3c-6fe0920d5b7f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bc4833e6-507b-4315-8c3c-6fe0920d5b7f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ffe8c1b5-74e1-416f-884e-9bdb275eb33c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ffe8c1b5-74e1-416f-884e-9bdb275eb33c')

GO

GO
/*
Post-Deployment Script Template                                   
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.          
 Use SQLCMD syntax to include a file in the post-deployment script.               
 Example:      :r .\myfile.sql                                        
 Use SQLCMD syntax to reference a variable in the post-deployment script.          
 Example:      :setvar TableName MyTable                                   
               SELECT * FROM [$(TableName)]                         
--------------------------------------------------------------------------------------
*/


-- This is run every install and upgrade. Must be idempotent.
-- https://www.mssqltips.com/sqlservertutorial/9004/insert-inital-seed-data-into-the-table-in-ssdt/


GO

GO
PRINT N'Update complete.';


GO
