/*
Deployment script for Test

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Test"
:setvar DefaultFilePrefix "Test"
:setvar DefaultDataPath "C:\Users\dmohr\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"
:setvar DefaultLogPath "C:\Users\dmohr\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/


--truncate table dbo.Nurse
--truncate table dbo.Company
--truncate table dbo.Address
--truncate table dbo.Nurses
GO

GO
PRINT N'Rename refactoring operation with key 68af4a8f-a0b6-4b16-aef0-f779d85f1716 is skipped, element [dbo].[Nurse].[Street1] (SqlSimpleColumn) will not be renamed to State';


GO
PRINT N'Rename refactoring operation with key 1ed7dfda-fa57-4aa3-9f43-975a49973c46, 2eb96f90-f298-4f4d-aa71-fbe44e163a24 is skipped, element [dbo].[Nurse].[Id] (SqlSimpleColumn) will not be renamed to AddressId';


GO
PRINT N'Rename refactoring operation with key bc4833e6-507b-4315-8c3c-6fe0920d5b7f, ffe8c1b5-74e1-416f-884e-9bdb275eb33c is skipped, element [dbo].[Nurse].[Street1] (SqlSimpleColumn) will not be renamed to Zip';


GO
PRINT N'Creating [dbo].[Addresses]...';


GO
CREATE TABLE [dbo].[Addresses] (
    [AddressId] UNIQUEIDENTIFIER NOT NULL,
    [Street1]   NVARCHAR (250)   NULL,
    [Street2]   NVARCHAR (250)   NULL,
    [City]      NVARCHAR (250)   NULL,
    [State]     NVARCHAR (250)   NULL,
    [Zip]       NVARCHAR (25)    NULL,
    [Country]   NVARCHAR (100)   NULL,
    PRIMARY KEY CLUSTERED ([AddressId] ASC)
);


GO
PRINT N'Creating [dbo].[AspNetRoles]...';


GO
CREATE TABLE [dbo].[AspNetRoles] (
    [Id]   NVARCHAR (128) NOT NULL,
    [Name] NVARCHAR (256) NOT NULL,
    CONSTRAINT [PK_AspNetRoles] PRIMARY KEY CLUSTERED ([Id] ASC) ON [PRIMARY]
) ON [PRIMARY];


GO
PRINT N'Creating [dbo].[AspNetUserClaims]...';


GO
CREATE TABLE [dbo].[AspNetUserClaims] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [UserId]     NVARCHAR (128) NOT NULL,
    [ClaimType]  NVARCHAR (MAX) NULL,
    [ClaimValue] NVARCHAR (MAX) NULL,
    CONSTRAINT [PK_AspNetUserClaims] PRIMARY KEY CLUSTERED ([Id] ASC) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY];


GO
PRINT N'Creating [dbo].[AspNetUserLogins]...';


GO
CREATE TABLE [dbo].[AspNetUserLogins] (
    [LoginProvider] NVARCHAR (128) NOT NULL,
    [ProviderKey]   NVARCHAR (128) NOT NULL,
    [UserId]        NVARCHAR (128) NOT NULL,
    CONSTRAINT [PK_AspNetUserLogins] PRIMARY KEY CLUSTERED ([LoginProvider] ASC, [ProviderKey] ASC, [UserId] ASC) ON [PRIMARY]
) ON [PRIMARY];


GO
PRINT N'Creating [dbo].[AspNetUserRoles]...';


GO
CREATE TABLE [dbo].[AspNetUserRoles] (
    [AspNetRoles_Id] NVARCHAR (128) NOT NULL,
    [AspNetUsers_Id] NVARCHAR (128) NOT NULL,
    CONSTRAINT [PK_AspNetUserRoles] PRIMARY KEY CLUSTERED ([AspNetRoles_Id] ASC, [AspNetUsers_Id] ASC) ON [PRIMARY]
) ON [PRIMARY];


GO
PRINT N'Creating [dbo].[AspNetUsers]...';


GO
CREATE TABLE [dbo].[AspNetUsers] (
    [Id]                   NVARCHAR (128) NOT NULL,
    [Email]                NVARCHAR (256) NULL,
    [EmailConfirmed]       BIT            NOT NULL,
    [PasswordHash]         NVARCHAR (MAX) NULL,
    [SecurityStamp]        NVARCHAR (MAX) NULL,
    [PhoneNumber]          NVARCHAR (MAX) NULL,
    [PhoneNumberConfirmed] BIT            NOT NULL,
    [TwoFactorEnabled]     BIT            NOT NULL,
    [LockoutEndDateUtc]    DATETIME       NULL,
    [LockoutEnabled]       BIT            NOT NULL,
    [AccessFailedCount]    INT            NOT NULL,
    [UserName]             NVARCHAR (256) NOT NULL,
    CONSTRAINT [PK_AspNetUsers] PRIMARY KEY CLUSTERED ([Id] ASC) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY];


GO
PRINT N'Creating [dbo].[C__MigrationHistory]...';


GO
CREATE TABLE [dbo].[C__MigrationHistory] (
    [MigrationId]    NVARCHAR (150)  NOT NULL,
    [ContextKey]     NVARCHAR (300)  NOT NULL,
    [Model]          VARBINARY (MAX) NOT NULL,
    [ProductVersion] NVARCHAR (32)   NOT NULL,
    CONSTRAINT [PK_C__MigrationHistory] PRIMARY KEY CLUSTERED ([MigrationId] ASC, [ContextKey] ASC) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY];


GO
PRINT N'Creating [dbo].[Companies]...';


GO
CREATE TABLE [dbo].[Companies] (
    [CompanyId] UNIQUEIDENTIFIER NOT NULL,
    [AddressId] UNIQUEIDENTIFIER NULL,
    [Name]      NVARCHAR (250)   NULL,
    PRIMARY KEY CLUSTERED ([CompanyId] ASC)
);


GO
PRINT N'Creating [dbo].[Nurses]...';


GO
CREATE TABLE [dbo].[Nurses] (
    [NurseId]   UNIQUEIDENTIFIER NOT NULL,
    [CompanyId] UNIQUEIDENTIFIER NULL,
    [AddressId] UNIQUEIDENTIFIER NULL,
    [Name]      NVARCHAR (250)   NOT NULL,
    [IsActive]  BIT              NOT NULL,
    PRIMARY KEY CLUSTERED ([NurseId] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[Nurses]...';


GO
ALTER TABLE [dbo].[Nurses]
    ADD DEFAULT 1 FOR [IsActive];


GO
PRINT N'Creating [dbo].[FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId]...';


GO
ALTER TABLE [dbo].[AspNetUserClaims] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId]...';


GO
ALTER TABLE [dbo].[AspNetUserLogins] WITH NOCHECK
    ADD CONSTRAINT [FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [dbo].[AspNetUsers] ([Id]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_AspNetUserRoles_AspNetRoles]...';


GO
ALTER TABLE [dbo].[AspNetUserRoles] WITH NOCHECK
    ADD CONSTRAINT [FK_AspNetUserRoles_AspNetRoles] FOREIGN KEY ([AspNetRoles_Id]) REFERENCES [dbo].[AspNetRoles] ([Id]);


GO
PRINT N'Creating [dbo].[FK_AspNetUserRoles_AspNetUsers]...';


GO
ALTER TABLE [dbo].[AspNetUserRoles] WITH NOCHECK
    ADD CONSTRAINT [FK_AspNetUserRoles_AspNetUsers] FOREIGN KEY ([AspNetUsers_Id]) REFERENCES [dbo].[AspNetUsers] ([Id]);


GO
PRINT N'Creating [dbo].[FK_Company_Address]...';


GO
ALTER TABLE [dbo].[Companies] WITH NOCHECK
    ADD CONSTRAINT [FK_Company_Address] FOREIGN KEY ([AddressId]) REFERENCES [dbo].[Addresses] ([AddressId]);


GO
PRINT N'Creating [dbo].[FK_Nurse_Address]...';


GO
ALTER TABLE [dbo].[Nurses] WITH NOCHECK
    ADD CONSTRAINT [FK_Nurse_Address] FOREIGN KEY ([AddressId]) REFERENCES [dbo].[Addresses] ([AddressId]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1ed7dfda-fa57-4aa3-9f43-975a49973c46')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1ed7dfda-fa57-4aa3-9f43-975a49973c46')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2eb96f90-f298-4f4d-aa71-fbe44e163a24')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2eb96f90-f298-4f4d-aa71-fbe44e163a24')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '68af4a8f-a0b6-4b16-aef0-f779d85f1716')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('68af4a8f-a0b6-4b16-aef0-f779d85f1716')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bc4833e6-507b-4315-8c3c-6fe0920d5b7f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bc4833e6-507b-4315-8c3c-6fe0920d5b7f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ffe8c1b5-74e1-416f-884e-9bdb275eb33c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ffe8c1b5-74e1-416f-884e-9bdb275eb33c')

GO

GO
/*
Post-Deployment Script Template                                   
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.          
 Use SQLCMD syntax to include a file in the post-deployment script.               
 Example:      :r .\myfile.sql                                        
 Use SQLCMD syntax to reference a variable in the post-deployment script.          
 Example:      :setvar TableName MyTable                                   
               SELECT * FROM [$(TableName)]                         
--------------------------------------------------------------------------------------
*/


-- This is run every install and upgrade. Must be idempotent.
--      https://www.mssqltips.com/sqlservertutorial/9004/insert-inital-seed-data-into-the-table-in-ssdt/

-- Comparison isn't working... hitting timeout. Run publish for now to deploy changes in ssdt project to db.
--      https://www.mssqltips.com/sqlservertutorial/9005/publish-the-database-using-ssdt/


-- TODO - make this re-runnable
--use Pinnacle
--go

BEGIN TRY 
insert into dbo.[Addresses]
values ('10728DAD-3DED-48EF-9120-303C833D1391', '123 Alvin Rd.', null, 'Grand Island', 'NY', 14072, 'USA'),
('0403F799-D4DA-49E1-AC90-8D97C0CA2A76', '1234 Grand Island Blvd', null, 'Grand Island', 'NY', 14072, 'USA')

insert into dbo.Companies
select 'C95066AB-AD1D-49E8-9B6C-7D65B4176DC8', '10728DAD-3DED-48EF-9120-303C833D1391', 'Test Company'

insert into dbo.Nurses
values
(newid(), null, '0403F799-D4DA-49E1-AC90-8D97C0CA2A76', 'Rod Knee', 1),
(newid(), null, '0403F799-D4DA-49E1-AC90-8D97C0CA2A76', 'Perry Scope', 1),
(newid(), null, '0403F799-D4DA-49E1-AC90-8D97C0CA2A76', 'Fran Tick', 1),
(newid(), null, '0403F799-D4DA-49E1-AC90-8D97C0CA2A76', 'Clyde Stale', 1),
(newid(), null, '0403F799-D4DA-49E1-AC90-8D97C0CA2A76', 'Ann Chovey', 1),
(newid(), null, '0403F799-D4DA-49E1-AC90-8D97C0CA2A76', 'Barry Cuda', 1),
(newid(), null, '0403F799-D4DA-49E1-AC90-8D97C0CA2A76', 'Frank Furter', 1),
(newid(), null, '0403F799-D4DA-49E1-AC90-8D97C0CA2A76', 'Marsha Mellow', 1),
(newid(), null, '0403F799-D4DA-49E1-AC90-8D97C0CA2A76', 'Chris P. Bacon', 1),
(newid(), null, '0403F799-D4DA-49E1-AC90-8D97C0CA2A76', 'Di Allysis', 1),
(newid(), null, '0403F799-D4DA-49E1-AC90-8D97C0CA2A76', 'Joseph Arimathea', 1),
(newid(), null, '0403F799-D4DA-49E1-AC90-8D97C0CA2A76', 'Mary Magdalene', 1)
END TRY  
BEGIN CATCH  
    print 'seed script error(s) :('
END CATCH  
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[AspNetUserClaims] WITH CHECK CHECK CONSTRAINT [FK_dbo_AspNetUserClaims_dbo_AspNetUsers_UserId];

ALTER TABLE [dbo].[AspNetUserLogins] WITH CHECK CHECK CONSTRAINT [FK_dbo_AspNetUserLogins_dbo_AspNetUsers_UserId];

ALTER TABLE [dbo].[AspNetUserRoles] WITH CHECK CHECK CONSTRAINT [FK_AspNetUserRoles_AspNetRoles];

ALTER TABLE [dbo].[AspNetUserRoles] WITH CHECK CHECK CONSTRAINT [FK_AspNetUserRoles_AspNetUsers];

ALTER TABLE [dbo].[Companies] WITH CHECK CHECK CONSTRAINT [FK_Company_Address];

ALTER TABLE [dbo].[Nurses] WITH CHECK CHECK CONSTRAINT [FK_Nurse_Address];


GO
PRINT N'Update complete.';


GO
