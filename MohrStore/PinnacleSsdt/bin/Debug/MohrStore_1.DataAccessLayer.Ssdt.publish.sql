/*
Deployment script for DocumentManagementSystem

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "DocumentManagementSystem"
:setvar DefaultFilePrefix "DocumentManagementSystem"
:setvar DefaultDataPath "C:\Users\dmohr\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"
:setvar DefaultLogPath "C:\Users\dmohr\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/


--truncate table dbo.Nurse
--truncate table dbo.Company
--truncate table dbo.Address
--truncate table dbo.Nurses
GO

GO
/*
Post-Deployment Script Template                                   
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.          
 Use SQLCMD syntax to include a file in the post-deployment script.               
 Example:      :r .\myfile.sql                                        
 Use SQLCMD syntax to reference a variable in the post-deployment script.          
 Example:      :setvar TableName MyTable                                   
               SELECT * FROM [$(TableName)]                         
--------------------------------------------------------------------------------------
*/


-- This is run every install and upgrade. Must be idempotent.

BEGIN TRY 
select * from dbo.Note

-- Old Names
 --'Rod Knee', 1),
 --'Perry Scope', 1),
 --'Fran Tick', 1),
 --'Clyde Stale', 1),
 --'Ann Chovey', 1),
 --'Barry Cuda', 1),
 --'Frank Furter', 1),
 --'Marsha Mellow', 1),
 --'Chris P. Bacon', 1),
 --'Di Allysis', 1),
 --'Joseph Arimathea', 1),
 --'Mary Magdalene', 1)

END TRY  
BEGIN CATCH  
    print 'seed script error(s) :('
END CATCH  
GO

GO
PRINT N'Update complete.';


GO
